{"version":3,"sources":["../src/SmartVirtualScroll.tsx"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\n\ninterface SmartVirtualScrollProps {\n  children: React.ReactNode[];\n  gap?: number; // space between items\n  threshold?: number; // distance before end to pre-load more\n  correction?: number; // extra items before/after\n  orientation?: \"horizontal\" | \"vertical\"; // scroll direction\n  style?: React.CSSProperties;\n}\n\nconst SmartVirtualScroll: React.FC<SmartVirtualScrollProps> = ({\n  children,\n  gap = 16,\n  threshold = 200,\n  correction = 2,\n  orientation = \"horizontal\",\n  style,\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const itemRef = useRef<HTMLDivElement>(null);\n\n  const [itemSize, setItemSize] = useState(0);\n  const [itemsPerView, setItemsPerView] = useState(10);\n  const [range, setRange] = useState({ start: 0, end: 10 });\n\n  // Measure size (width or height) of one child and calculate fit\n  useLayoutEffect(() => {\n    const measure = () => {\n      const container = containerRef.current;\n      const item = itemRef.current;\n      if (!container || !item) return;\n\n      const containerSize =\n        orientation === \"horizontal\"\n          ? container.clientWidth\n          : container.clientHeight;\n\n      const singleItemSize =\n        (orientation === \"horizontal\" ? item.clientWidth : item.clientHeight) +\n        gap;\n\n      const fitCount = Math.floor(containerSize / singleItemSize);\n      const totalVisible = fitCount + correction;\n\n      setItemSize(singleItemSize);\n      setItemsPerView(totalVisible);\n      setRange({ start: 0, end: totalVisible });\n    };\n\n    measure();\n    window.addEventListener(\"resize\", measure);\n    return () => window.removeEventListener(\"resize\", measure);\n  }, [gap, correction, orientation]);\n\n  const handleScroll = () => {\n    const container = containerRef.current;\n    if (!container || !itemSize) return;\n\n    const scrollOffset =\n      orientation === \"horizontal\" ? container.scrollLeft : container.scrollTop;\n    const totalScrollSize =\n      orientation === \"horizontal\"\n        ? container.scrollWidth\n        : container.scrollHeight;\n    const clientSize =\n      orientation === \"horizontal\"\n        ? container.clientWidth\n        : container.clientHeight;\n\n    const firstVisibleIndex = Math.floor(scrollOffset / itemSize);\n    const start = Math.max(0, firstVisibleIndex - correction);\n    const end = Math.min(start + itemsPerView + correction, children.length);\n\n    setRange({ start, end });\n\n    // Optional pre-load near end\n    if (totalScrollSize - scrollOffset - clientSize < threshold) {\n      setRange((prev) => ({\n        ...prev,\n        end: Math.min(prev.end + itemsPerView, children.length),\n      }));\n    }\n  };\n\n  const visibleItems = children.slice(range.start, range.end);\n  const totalSize = children.length * itemSize;\n  const offset = range.start * itemSize;\n\n  // dynamic flex direction\n  const isHorizontal = orientation === \"horizontal\";\n\n  return (\n    <div\n      ref={containerRef}\n      onScroll={handleScroll}\n      style={{\n        overflowX: isHorizontal ? \"auto\" : \"hidden\",\n        overflowY: isHorizontal ? \"hidden\" : \"auto\",\n        display: \"flex\",\n        flexDirection: isHorizontal ? \"row\" : \"column\",\n        position: \"relative\",\n        height: isHorizontal ? \"fit-content\" : \"80vh\",\n        width: \"100%\",\n        ...style,\n      }}\n    >\n      {/* Spacer before */}\n      <div\n        style={{\n          flex: \"0 0 auto\",\n          [isHorizontal ? \"width\" : \"height\"]: offset,\n        }}\n      />\n\n      {/* Visible items */}\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: isHorizontal ? \"row\" : \"column\",\n          gap: `${gap}px`,\n        }}\n      >\n        {/* Hidden reference item */}\n        {range.start === 0 && (\n          <div\n            ref={itemRef}\n            style={{ visibility: \"hidden\", position: \"absolute\" }}\n          >\n            {children[0]}\n          </div>\n        )}\n\n        {visibleItems.map((child, i) => (\n          <div key={range.start + i}>{child}</div>\n        ))}\n      </div>\n\n      {/* Spacer after */}\n      <div\n        style={{\n          flex: \"0 0 auto\",\n          [isHorizontal ? \"width\" : \"height\"]:\n            totalSize - offset - visibleItems.length * itemSize,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default SmartVirtualScroll;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,SAAoB,iBAAiB,QAAQ,gBAAgB;AAWpE,IAAM,qBAAwD,CAAC;AAAA,EAC7D;AAAA,EACA,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,aAAa;AAAA,EACb,cAAc;AAAA,EACd;AACF,MAAM;AACJ,QAAM,eAAe,OAAuB,IAAI;AAChD,QAAM,UAAU,OAAuB,IAAI;AAE3C,QAAM,CAAC,UAAU,WAAW,IAAI,SAAS,CAAC;AAC1C,QAAM,CAAC,cAAc,eAAe,IAAI,SAAS,EAAE;AACnD,QAAM,CAAC,OAAO,QAAQ,IAAI,SAAS,EAAE,OAAO,GAAG,KAAK,GAAG,CAAC;AAGxD,kBAAgB,MAAM;AACpB,UAAM,UAAU,MAAM;AACpB,YAAM,YAAY,aAAa;AAC/B,YAAM,OAAO,QAAQ;AACrB,UAAI,CAAC,aAAa,CAAC,KAAM;AAEzB,YAAM,gBACJ,gBAAgB,eACZ,UAAU,cACV,UAAU;AAEhB,YAAM,kBACH,gBAAgB,eAAe,KAAK,cAAc,KAAK,gBACxD;AAEF,YAAM,WAAW,KAAK,MAAM,gBAAgB,cAAc;AAC1D,YAAM,eAAe,WAAW;AAEhC,kBAAY,cAAc;AAC1B,sBAAgB,YAAY;AAC5B,eAAS,EAAE,OAAO,GAAG,KAAK,aAAa,CAAC;AAAA,IAC1C;AAEA,YAAQ;AACR,WAAO,iBAAiB,UAAU,OAAO;AACzC,WAAO,MAAM,OAAO,oBAAoB,UAAU,OAAO;AAAA,EAC3D,GAAG,CAAC,KAAK,YAAY,WAAW,CAAC;AAEjC,QAAM,eAAe,MAAM;AACzB,UAAM,YAAY,aAAa;AAC/B,QAAI,CAAC,aAAa,CAAC,SAAU;AAE7B,UAAM,eACJ,gBAAgB,eAAe,UAAU,aAAa,UAAU;AAClE,UAAM,kBACJ,gBAAgB,eACZ,UAAU,cACV,UAAU;AAChB,UAAM,aACJ,gBAAgB,eACZ,UAAU,cACV,UAAU;AAEhB,UAAM,oBAAoB,KAAK,MAAM,eAAe,QAAQ;AAC5D,UAAM,QAAQ,KAAK,IAAI,GAAG,oBAAoB,UAAU;AACxD,UAAM,MAAM,KAAK,IAAI,QAAQ,eAAe,YAAY,SAAS,MAAM;AAEvE,aAAS,EAAE,OAAO,IAAI,CAAC;AAGvB,QAAI,kBAAkB,eAAe,aAAa,WAAW;AAC3D,eAAS,CAAC,SAAU,iCACf,OADe;AAAA,QAElB,KAAK,KAAK,IAAI,KAAK,MAAM,cAAc,SAAS,MAAM;AAAA,MACxD,EAAE;AAAA,IACJ;AAAA,EACF;AAEA,QAAM,eAAe,SAAS,MAAM,MAAM,OAAO,MAAM,GAAG;AAC1D,QAAM,YAAY,SAAS,SAAS;AACpC,QAAM,SAAS,MAAM,QAAQ;AAG7B,QAAM,eAAe,gBAAgB;AAErC,SACE;AAAA,IAAC;AAAA;AAAA,MACC,KAAK;AAAA,MACL,UAAU;AAAA,MACV,OAAO;AAAA,QACL,WAAW,eAAe,SAAS;AAAA,QACnC,WAAW,eAAe,WAAW;AAAA,QACrC,SAAS;AAAA,QACT,eAAe,eAAe,QAAQ;AAAA,QACtC,UAAU;AAAA,QACV,QAAQ,eAAe,gBAAgB;AAAA,QACvC,OAAO;AAAA,SACJ;AAAA;AAAA,IAIL;AAAA,MAAC;AAAA;AAAA,QACC,OAAO;AAAA,UACL,MAAM;AAAA,UACN,CAAC,eAAe,UAAU,QAAQ,GAAG;AAAA,QACvC;AAAA;AAAA,IACF;AAAA,IAGA;AAAA,MAAC;AAAA;AAAA,QACC,OAAO;AAAA,UACL,SAAS;AAAA,UACT,eAAe,eAAe,QAAQ;AAAA,UACtC,KAAK,GAAG,GAAG;AAAA,QACb;AAAA;AAAA,MAGC,MAAM,UAAU,KACf;AAAA,QAAC;AAAA;AAAA,UACC,KAAK;AAAA,UACL,OAAO,EAAE,YAAY,UAAU,UAAU,WAAW;AAAA;AAAA,QAEnD,SAAS,CAAC;AAAA,MACb;AAAA,MAGD,aAAa,IAAI,CAAC,OAAO,MACxB,oCAAC,SAAI,KAAK,MAAM,QAAQ,KAAI,KAAM,CACnC;AAAA,IACH;AAAA,IAGA;AAAA,MAAC;AAAA;AAAA,QACC,OAAO;AAAA,UACL,MAAM;AAAA,UACN,CAAC,eAAe,UAAU,QAAQ,GAChC,YAAY,SAAS,aAAa,SAAS;AAAA,QAC/C;AAAA;AAAA,IACF;AAAA,EACF;AAEJ;AAEA,IAAO,6BAAQ;","names":[]}